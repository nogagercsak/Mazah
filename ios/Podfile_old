require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# Force disable new architecture to prevent TurboModule crashes
ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'mazah' do
  use_expo_modules!

  use_frameworks! :linkage => :static
  $RCTNewArchEnabled = false

  use_react_native!(
    :hermes_enabled => true,
    :fabric_enabled => false
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      File.dirname(`node --print "require.resolve('react-native/package.json')"`)
    )

    # Fix for Xcode 15+ compatibility and prevent TurboModule crashes
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=0'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_FABRIC_ENABLED=0'
      end
    end

    # ----- Hermes path fix -----
    installer.pods_project.targets.each do |target|
      if target.name == 'hermes-engine'
        target.build_phases.each do |phase|
          if phase.respond_to?(:shell_script) && phase.shell_script.include?("with-environment.sh")
            phase.shell_script = '"${PODS_ROOT}/../node_modules/react-native/scripts/xcode/with-environment.sh"'
          end
        end
      end
    end
    # ---------------------------
  end
end
